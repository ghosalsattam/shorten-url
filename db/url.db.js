let urlModel=require("../models/url.model");
/**
 * 
 * @param {String} shortened_url: The shortened url which was generated by the system. 
 * @returns list of objects with the shortened url and the corresponding long url.
 * Returns empty array if no elemant in array.
 * 
 * A function to fetch the original url from short url.
 * If shortened_url is not passed, all the short urls along with their original url is returned.
 */
exports.findUrl=async function(shortened_url){
    let docs;
    if(!shortened_url){
        docs=await urlModel.find().sort().exec();
    }else{
        docs=await urlModel.find({url_id: shortened_url.split("/")[shortened_url.split("/").length-1]})
    }
    return docs
}

/**
 * 
 * @param {String} original_url Original url whose hash/shortened form is to be calculated. 
 * @returns Shortened url_id/hash value if there is any corresponding entry in db. Else return undefined.
 * 
 * Return shortened url_id/hash for the given url if it exist else returns undefined. 
 */
exports.fetchShortenedUrlForOriginalUrl=async function(original_url){
    let docs=await urlModel.findOne({
        original_url: original_url

    })
    if(docs){
        return docs.url_id;
    }
    else{
        return docs;
    }
}

/**
 * 
 * @returns Latest url_id generated.
 * Finds and returns the latest hash generated.
 */
exports.fetchLatestShortenedUrl=async function(){
    try{
        let docs=await urlModel.find().sort({createdAt:1}).exec();
        if(docs&&docs.length)
            return docs[docs.length-1].url_id
        else
            return docs[0];
    }catch(e){
        console.log(e);
    }
}


/**
 * 
 * @param {String} url Original url
 * @param {String} url_id urlid generated by the backend
 * @returns the document saved, if the document is saved succesfully.
 * 
 * Creates an entry corresponding to the db url and hash created.
 */
exports.saveUrl= async function(url, url_id){
    let url1=new urlModel({
        url_id: url_id,
        original_url: url
    });
    let docs=await url1.save();
    console.log("Docs=", docs);
    return docs;
}